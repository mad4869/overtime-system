generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         Int            @id @default(autoincrement())
  name       String         @db.VarChar(255)
  npk        String         @unique @db.VarChar(255)
  email      String         @db.VarChar(255)
  password   String
  role       UserRole       @default(USER)
  position   String         @db.VarChar(255)
  unit       UserUnit
  department UserDepartment
  company    UserCompany
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  isActive   Boolean        @default(false)
  items      UserItem[]
}

model UserItem {
  id              Int            @id @default(autoincrement())
  userId          Int
  item            String
  startTime       DateTime       @db.Timestamptz()
  finishedTime    DateTime       @db.Timestamptz()
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  userItemRecapId Int?
  user            User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  UserItemRecap   UserItemRecap? @relation(fields: [userItemRecapId], references: [id])
}

model UserItemRecap {
  id              Int        @id @default(autoincrement())
  isApprovedByVP  Boolean    @default(false)
  isApprovedByAVP Boolean    @default(false)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  userItems       UserItem[]
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  USER
}

enum UserUnit {
  MEKANIK_P6_P1 @map("Mekanik P6/P1")
  MEKANIK_P2_P5 @map("Mekanik P2/P5")
  INSTRUMENT    @map("Instrument")
  ELECTRICAL_1  @map("Electrical 1")
}

enum UserDepartment {
  OM_1 @map("Operation & Maintenance 1")
}

enum UserCompany {
  YUM @map("PT. Yepeka Usaha Mandiri")
  KNE @map("PT. Kaltim Nusa Etika")
}
