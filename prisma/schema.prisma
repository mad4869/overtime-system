generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  npk        String     @unique @db.VarChar(255)
  email      String     @db.VarChar(255)
  password   String
  role       UserRole   @default(USER)
  position   String     @db.VarChar(255)
  unit       String     @db.VarChar(255)
  department String     @db.VarChar(255)
  company    String     @db.VarChar(255)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  isActive   Boolean    @default(false)
  items      UserItem[]
}

model UserItem {
  id              Int            @id @default(autoincrement())
  userId          Int
  item            String
  startTime       DateTime       @db.Timestamptz()
  finishedTime    DateTime       @db.Timestamptz()
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  userItemRecapId Int?
  user            User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  UserItemRecap   UserItemRecap? @relation(fields: [userItemRecapId], references: [id])
}

model UserItemRecap {
  id              Int        @id @default(autoincrement())
  isApprovedByVP  Boolean    @default(false)
  isApprovedByAVP Boolean    @default(false)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  userItems       UserItem[]
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  USER
}
